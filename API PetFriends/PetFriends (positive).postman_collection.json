{
	"info": {
		"_postman_id": "6ef0a421-ae38-4fc3-9b17-80cc598c15eb",
		"name": "PetFriends (positive)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24878696"
	},
	"item": [
		{
			"name": "Получение API  ключа",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"Наличие ключа, запись ключа в переменную\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData).to.have.all.keys('key');\r",
							"    pm.collectionVariables.set(\"auth_key\", jsonData.key)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "email",
						"value": "{{valid_email}}",
						"type": "text"
					},
					{
						"key": "password",
						"value": "{{valid_password}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/key",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение общего списка pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"Количество питомцев в списке >2\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    console.log(jsonData.pets.length)\r",
							"    pm.expect(jsonData.pets.length).to.be.above(2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка pets пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"Питомцы в списке принадлежат пользователю\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get('pet_name1')).to.equal(jsonData.pets[0].name);\r",
							"    pm.expect(pm.collectionVariables.get('pet_name2')).to.equal(jsonData.pets[1].name);\r",
							"    console.log(jsonData.pets[0].name, jsonData.pets[1].name)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"pet_name1\", pm.iterationData.get(\"pet_name1\"))\r",
							"pm.collectionVariables.set(\"pet_name2\", pm.iterationData.get(\"pet_name2\"))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового pet3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"В ответе информация о добавленном питомце\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get('pet_name3')).to.equal(jsonData.name);\r",
							"    console.log(jsonData.name)\r",
							"});\r",
							"pm.test(\"Запись id в переменную\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.collectionVariables.set(\"pet_id3\", jsonData.id)\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"pet_name3\", pm.iterationData.get(\"pet_name3\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{pet_name3}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type_pet3}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_pet3}}",
							"type": "text"
						},
						{
							"key": "pet_photo",
							"type": "file",
							"src": "parrot-t.jpg"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка, что pet3 добавлен",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка, что новый pet3 добавлен\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"pet_id3\")).to.eql(jsonData.pets[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового pet4 без фото",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"В ответе информация о добавленном питомце\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get('pet_name4')).to.equal(jsonData.name);\r",
							"    console.log(jsonData.name)\r",
							"});\r",
							"pm.test(\"Запись id в переменную\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.collectionVariables.set(\"pet_id4\", jsonData.id)\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"pet_name4\", pm.iterationData.get(\"pet_name4\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{pet_name4}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type_pet4}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_pet4}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/create_pet_simple",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"create_pet_simple"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка, что pet4 добавлен",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка, что новый pet4 добавлен\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"pet_id4\")).to.eql(jsonData.pets[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление фото pet4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"В ответе информация о добавленном фото\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData.pet_photo).to.not.equal(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "pet_photo",
							"type": "file",
							"src": "hamster.jpg"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/pets/set_photo/:pet_id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						"set_photo",
						":pet_id"
					],
					"variable": [
						{
							"key": "pet_id",
							"value": "{{pet_id4}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение имени pet4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type имеет значение application/json\", function(){\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test(\"В ответе новое имя питомца\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get('pet_name4')).to.not.equal(jsonData.name);\r",
							"    console.log(jsonData.name)\r",
							"});\r",
							"pm.test(\"Запись нового имени в переменную\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.collectionVariables.set('pet_name4', jsonData.name)\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{pet_new_name}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type_pet4}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_pet4}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/pets/:pet_id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						":pet_id"
					],
					"variable": [
						{
							"key": "pet_id",
							"value": "{{pet_id4}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка, что pet4 изменен",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка, что pet4 изменен\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"pet_name4\")).to.eql(jsonData.pets[0].name);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление pet4",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets/{{pet_id4}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						"{{pet_id4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка, что pet4 удален",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка, что pet4 удален\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"pet_id4\")).to.not.eql(jsonData.pets[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление pet3",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets/{{pet_id3}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets",
						"{{pet_id3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка, что pet3 удален",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка, что pet4 удален\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"pet_id3\")).to.not.eql(jsonData.pets[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pets?filter=my_pets",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets",
							"description": "my_pets"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{auth_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "auth_key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://petfriends.skillfactory.ru",
			"type": "string"
		},
		{
			"key": "auth_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "valid_email",
			"value": "",
			"type": "string"
		},
		{
			"key": "valid_password",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_name1",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_name2",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_name3",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_name4",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_new_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_id3",
			"value": ""
		},
		{
			"key": "pet_id4",
			"value": "",
			"type": "string"
		},
		{
			"key": "type_pet3",
			"value": "",
			"type": "string"
		},
		{
			"key": "type_pet4",
			"value": "",
			"type": "string"
		},
		{
			"key": "age_pet3",
			"value": "",
			"type": "string"
		},
		{
			"key": "age_pet4",
			"value": "",
			"type": "string"
		}
	]
}